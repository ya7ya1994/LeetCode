class SingleNumberII {
    //   Method 1
    /*public int singleNumber(int[] nums) {
        Map<Integer,Integer> record = new HashMap<>();
        int result = nums[0];
        for ( int i : nums)
        {   int count=0;
            if ( record.containsKey(i))
                count = record.get(i);

            record.put(i,count+1);
        }

        for (Map.Entry<Integer,Integer> entry : record.entrySet())
            if (entry.getValue() == 1)
                result = entry.getKey();
        return result;
    }*/
//  Method 2
    public int singleNumber(int[] nums) {
        int ones = 0, twos = 0, threes = 0;

        for (int i = 0; i < nums.length; i++) {
            // twos holds the num that appears twice
            twos |= ones & nums[i];

            // ones holds the num that appears once
            ones ^= nums[i];

            // threes holds the num that appears three times
            threes = ones & twos;

            // if num[i] appears three times
            // doing this will clear ones and twos
            ones &= ~threes;
            twos &= ~threes;
        }

        return ones;
    }
}